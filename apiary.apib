FORMAT: 1A
HOST: https://api-draft.kenticocloud.com/

# Kentico Draft API — Developer documentation
## Getting started with Kentico Draft API
Welcome to the Kentico Draft API documentation for developers! This documentation describes how you can use to Kentico Draft API to migrate content and content models from Kentico Draft to a platform of your choice.
The Kentico Draft API is based on REST specification. If you're new to REST, 
reading [Roy Fielding's dissertation](https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm) 
might give you a head start. We try to keep our API clean and straightforward using common best practices. 
You can read [a brief overview of basic best practices](http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api).

Before you begin exploring Kentico Draft API, you may take a look at the list of [response statuses](#introduction/getting-started-with-kentico-draft-api/typical-server-responses) and [error responses](#introduction/getting-started-with-kentico-draft-api/error-responses). 
This might help you to save precious time when resolving issues in the future:

### Typical Server Responses
*   <code>200</code> OK - The request was successful
*   <code>201</code> Created - The request was successful and a resource was created
*   <code>204</code> No Content - The request was successful but there is no representation to return (that is, the response is empty)
*   <code>400</code> Bad Request - The request could not be understood or was missing required parameters
*   <code>401</code> Unauthorized - Authentication failed or user does not have permissions for the requested operation
*   <code>403</code> Forbidden - Access denied
*   <code>404</code> Not Found - Resource was not found
*   <code>405</code> Method Not Allowed - Requested method is not supported for the specified resource
*   <code>429</code> Too Many Requests - Request is rejected due to rate limiting as defined in 
    [rfc6585](https://tools.ietf.org/html/rfc6585#section-4). Value of <code>Retry-After</code> header (seconds) must be respected.  
    Additionaly each response under rate limitatation includes following headers:
    * `X-Rate-Limit-Limit` rate limit period definion (example: `1d`, `15m`)
    * `X-Rate-Limit-Remaining` the number of remaining requests in the current period
    * `X-Rate-Limit-Reset` current period end time (example: `8/6/2016 7:54:40 AM`)

### Error Responses
For troubleshooting failed requests (for example when an object was not found) the Kentico Draft API provides error messages in a defined consumable format that help you identify the issue and get the desired response as soon as possible. Example:

    {
      "error_id": "0HKTT1H7HR1CO",
      "code": "CR404",
      "message": "Not found",
      "description": "Requested asset wasn't found"
    }
    
When creating or editing an object using the API and the object contained in the request body doesn't satisfy Kentico Draft model validation rules, the error response will contain a list of errors related to the request body fields. Example

    {
      "error_id": "0HKTT1H7HR1CP",
      "code": "CR400",
      "message": "Bad Request",
      "description": "The request is malformed",
      "errors": [
        {
          "field": "email",
          "code": "VRM100",
          "message": "Missing or empty",
          "description": "Required parameter is missing or empty"
        },
        {
          "field": "password",
          "code": "VRM100",
          "message": "Missing or empty",
          "description": "Required parameter is missing or empty"
        }
      ]
    }
    
Field `error_id` is unique. When having some issues, send us the `error_id`, and we will quickly debug and track reported issues.

### Feedback and Help
If you have ideas about how we can improve Draft API or this documentation or want to share with us any comments, email us at draft@kentico.com.

We're always glad to answer all your questions or share with you our future plans. Drop us a line at draft@kentico.com.

### Head start
Often content migration requires complex understanding of Kentico Draft API. Following use cases might help you get started:
*   [Getting approved content items](#introduction/getting-approved-content-items)
*   [Downloading assets](#introduction/downloading-assets)
*   [Getting modular content items](#introduction/getting-modular-content-items)

## Getting approved content items
After content in Kentico Draft is approved and ready for import into a CMS, you can use Draft API to get the finished content items. Now, we’ll show you in 6 simple steps how you can get all content items of a content inventory section.

### 1. Configure authorization
For security reasons, we will need to recognize your requests using an API key. You can easily get your API key in your [Kentico Draft user profile](https://draft.kenticocloud.com/#/user-profile). Save this key and include it in the Authorization header of all Kentico Draft API requests. The Authorization header should look like the following:

<pre>Authorization:Bearer {access_token}</pre>


### 2. Get a project
Objects like content items and content models are part of a project. Therefore, you will need to include the project ID as a part of the request URI.

To get a project ID, [get the list of all projects](#reference/0/projects/get-all-projects). Then, pick your project and save the project ID.

### 3. Get a content type (optional)
The content inventory contains items of various content types. You can use Draft API to get only items of a specific content type. Now, we’ll show you how you can get a content type. You’ll need the ID of this type later on when getting content items.

To get a content type, [get a list of all content types](#reference/0/content-types/get-all-content-types). Then, pick a type and save it for later. You can pick multiple types to get items belonging to one of them.

### 4. Get a sitemap location (optional)
The sitemap in Draft helps you to organize content items into a logical structure which gives you a hint how the new website will look. You can use Draft API to get only items assigned to a specific sitemap location. Now, we’ll show you how you can get your sitemap. You’ll need the ID of a sitemap location later on when getting content items.

To get a sitemap location, [get the whole sitemap](#reference/0/sitemap/get-sitemap). Then, pick a location and save it for later. You can pick multiple locations to get items assigned to one of them.

### 5. Get a workflow step (optional)
Content items can be in various steps of your content production workflow. Typically, you might need to get only approved content items. You can use Draft API to get only items with a particular workflow step. Now, we’ll show you how you can get a workflow step. You’ll need the ID of this workflow step later on when getting content items. 

To get a workflow step, [get a list of all steps](#reference/0/workflow/get-workflow). Then, pick a step and save it for later. You can pick multiple workflow steps to get items assigned to one of them.

### 6. Get the content items
Now, we’ll show you how you can get a list of content items from your content inventory. You can refine items by a content type, workflow step or a sitemap location. To achieve this, include a type ID, step ID or location ID in the query string of your request when [getting content items](#reference/0/content-items/get-content-items).

Note, that when you are getting more than 10 items at once, Draft API will slice the whole list of items into pages. Initially, it will return you the first page with a link to the next page. You can use this link to get the next bunch of items until you reach the last page. To get the items, check the items part of the [response JSON](#reference/0/all-content-items/get-content-items). To get the next page, check the pagination part of the [response JSON](#reference/0/content-items/get-content-items).

## Downloading assets
When exporting content items from Draft, you might need to download assets included in these items. Draft API allows you to generate a temporary download link, which expires after 60 minutes. 

After [getting content items](#reference/0/all-content-items/get-content-items), find asset content elements of all items from which you want to download assets. You can recognize asset content element, by having a type attribute “asset”. The value of asset content elements is an array of asset metadata. Pick IDs of assets, which we’ll use later.

When you have the asset ID, you can use Kentico Draft API to [get a temporary asset download link](#reference/0/assets/get-asset-download-link).

## Getting modular content items
Content items in Draft may be composed of smaller content blocks called modular content items. You can use Draft API to get modular content items as well. 

After [getting content items](#reference/0/all-content-items/get-content-items), find content elements which hold the modular content items. You can recognize modular content elements, by having a type attribute “modular_content”. Pick modular items IDs, which we’ll use later.

When you have the modular content item ID, you can use Kentico Draft API to [get a specific content item](#reference/0/one-content-item/get-content-item).

## Projects [/projects]
Project is where all your content is stored. Both content inventory and content models are always part of a project.

### Get All Projects [GET]
+ Request
    + Headers
    
            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (Projects)

## Content Types [/projects/{project_id}/types]
Content types define the structure of your content items.
+ Parameters

    + project_id: `54da688e-5489-467d-bd25-28882f4f054d` (string, required)
    
### Get all Content Types [GET]
+ Request
    + Headers
    
            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (Content Types)
    
## All Content Items [/projects/{project_id}/items{?sitemap_location,workflow_status,content_type}]
Content items contain content for your website.
+ Parameters

    + project_id: `54da688e-5489-467d-bd25-28882f4f054d` (string, required)
    + sitemap_location: `9ee4e597-40c3-266d-5965-8d3e437b8eed` (string, optional) - Include sitemap location ID to get only items assigned to this location. You can use this parameter multiple times to get items from several locations at once.
    + workflow_status: `65e025db-1a04-4b9d-b366-408e09b58cb7` (string, optional) - Include workflow status ID to get only items with this status. For example, only approved items.
    + content_type: `2e9b7cdd-e623-4918-a3f0-eb237878723c` (string, optional) - Include content type ID to get only items of this type.

### Get Content Items [GET]
+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes 
        + items (Content Items)
        + pagination - simple forward only paging
            + item_count: 128 (number, required)
            + page_count: 13 (number, required)
            + current_page: 1 (number, required)
            + next_page: `https://api-draft.kenticocloud.com/projects/54da688e-5489-467d-bd25-28882f4f054d/items?page=2` (string, required)
    
## One Content Item [/projects/{project_id}/items/{item_id}]
A single content item contains content for one web page or a smaller content block.
+ Parameters

    + project_id: `54da688e-5489-467d-bd25-28882f4f054d` (string, required)
    + item_id: `f22608f6-f037-4dda-8869-9924023fec7b` (string, required)

### Get Content Item [GET]
+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (Content Item)

## Workflow [/projects/{project_id}/workflow]
Workflow steps help you to distinguish what items are approved for import.
+ Parameters

    + project_id: `54da688e-5489-467d-bd25-28882f4f054d` (string, required)

### Get Workflow [GET]
+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (Workflow Statuses)
    
    + Body
    
            {
              "statuses": [
                {
                  "_id": "2311ca28-b696-4fc7-ac27-340cc9c4e53d",
                  "name": "Draft",
                  "color": "red"
                }, {
                  "_id": "7ff9f463-008a-4bed-b979-fa7868f34585",
                  "name": "Review",
                  "color": "yellow"
                }, {
                  "_id": "a871b156-7eb6-45d8-805a-c3bfa2f53a22",
                  "name": "SEO verification",
                  "color": "lime"
                }, {
                  "_id": "dd472b79-fb4e-4e2d-9270-449bc69c6cd4",
                  "name": "Ready for approval",
                  "color": "teal"
                }, {
                  "_id": "65e025db-1a04-4b9d-b366-408e09b58cb7",
                  "name": "Approved",
                  "color": "blue"
                }
              ]
            }
            
    
## Sitemap [/projects/{project_id}/sitemap]
Sitemap location helps you to get only content items which you're currently importing.
+ Parameters

    + project_id: `54da688e-5489-467d-bd25-28882f4f054d` (string, required)

### Get Sitemap [GET]
+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (Sitemap)
    
    + Body
        
            {
              "nodes": [
                {
                  "sitemap_node_id": "9ee4e597-40c3-266d-5965-8d3e437b8eed",
                  "name": "Home",
                  "children": []
                },
                {
                  "sitemap_node_id": "6fc2bcbc-8500-e855-ad66-575ac0f9c35e",
                  "name": "Events",
                  "children": [
                    {
                      "sitemap_node_id": "82ec09fb-8851-551e-0221-017fe29c1bdb",
                      "name": "USA",
                      "children": []
                    },
                    {
                      "sitemap_node_id": "326e8b6b-2df2-a223-b23c-ff116eba3c1b",
                      "name": "Europe",
                      "children": []
                    }
                  ]
                },
                {
                  "sitemap_node_id": "6200a4bf-a89b-9c53-2707-dd12ab3ffd87",
                  "name": "Blog",
                  "children": []
                }
              ]
            }
            
## Assets [/projects/{project_id}/assets/{asset_id}]
Kentico Draft API allows you to generate a download link for your assets. Download link expires after 60 minutes.
+ Parameters

    + project_id: `54da688e-5489-467d-bd25-28882f4f054d` (string, required)
    + asset_id: `287b779d-9ceb-4c8f-96c4-ea4fdb22b09d` (string, required) 

### Get Asset Download Link [GET]
+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes
        + link: `https://horusdevelopment.blob.core.windows.net/54da688e-5489-467d-bd25-28882f4f054d/287b779d-9ceb-4c8f-96c4-ea4fdb22b09d/blogpost_teaser.jpg?sv=2015-02-21&sig=FVArbWI7zCodmEMJ69DE4JCiyfhqj` (string, required) - Temporary asset download link.
        + exp: `2016-06-11T12:55:28.29493Z` (string, required) - Asset download link expiration date and time in ISO 8601 format.

##########################################################

# Data Structures

## Project (object)
+ `project_id` : `54da688e-5489-467d-bd25-28882f4f054d` (string, required)
+ name: Sample Project (string, required)

## Projects (object)
+ projects (array[Project])

## Content Type (object)
+ `type_id`: `2e9b7cdd-e623-4918-a3f0-eb237878723c` (string, required)
+ name: Blog (string, required) - Max 50 characters
+ elements (array, required)
    - (TextTypeElement)
    - (RichTextTypeElement)
    - (NumberTypeElement)
    - (DateTimeTypeElement)
    - (AssetTypeElement)
    - (ModularContentTypeElement)

## Content Types (object)
+ types (array[Content Type])

## AssetTypeElement (object)
+ `element_id`: `a3a31bea-fbbf-4534-8002-a1907955f537` (string, required)
+ name: Teaser image (string, required)
+ type: assets (string, required)

## DateTimeTypeElement (object)
+ `element_id`: `3697b5c0-4139-4304-b09d-fff5bc3ccdd4` (string, required)
+ name: Publication date (string, required)
+ type: `date_time` (string, required)

## NumberTypeElement (object)
+ `element_id`: `644d2ddc-2af5-4665-8c04-6ceb2ad1313b` (string, required)
+ name: Price in USD (string, required)
+ type: number (string, required)

## TextTypeElement (object)
+ `element_id`: `f97149c2-ac83-49c1-b23d-9ba597460a10` (string, required)
+ name: Title (string, required)
+ type: text (string, required)

## RichTextTypeElement (object)
+ `element_id`: `af4ca3fb-870a-48b0-88bf-10175a6efc3e` (string, required)
+ name: Body (string, required)
+ type: `rich_text` (string, required)

## ModularContentTypeElement (object)
+ `element_id`: `c7599588-edbd-4ae0-a5dc-91c3240916ef` (string, required)
+ name: Features (string, required)
+ type: `modular_content` (string, required)

############################################

## Content Item (object)
+ `item_id`: `f22608f6-f037-4dda-8869-9924023fec7b` (string, required)
+ `type_id` : `2e9b7cdd-e623-4918-a3f0-eb237878723c` (string, required) 
+ `workflow_status_id`: `65e025db-1a04-4b9d-b366-408e09b58cb7` (string, required)
+ name: `Blog post` (string, optional) - Max 50 characters
+ sitemap_location (array[string])
    - `9ee4e597-40c3-266d-5965-8d3e437b8eed`
    - `6fc2bcbc-8500-e855-ad66-575ac0f9c35e`
+ last_modified: `2016-06-09T14:41:10.6814919Z` (string, required) - ISO 8601 date time
+ elements (array, required)
    - (TextItemElement)
    - (RichTextItemElement)
    - (NumberItemElement)
    - (DateTimeItemElement)
    - (AssetItemElement)
    - (ModularContentItemElement)
    
## Content Items (array[Content Item])

## Workflow Status (object)
+ workflow_id: `65e025db-1a04-4b9d-b366-408e09b58cb7` (string, required)
+ name: Draft (string, required)
+ color: red (enum, required)
    - red
    - pink
    - purple
    - `deep-purple`
    - indigo
    - blue
    - cyan
    - teal
    - green
    - `light-green`
    - lime
    - yellow
    - amber
    - orange
    - brown
    - grey
    - `light-grey`
    
## Workflow Statuses (object)
+ statuses (array[Workflow Status])
    
## Asset (object)
+ asset_id: `287b779d-9ceb-4c8f-96c4-ea4fdb22b09d` (string, required)
+ name: `blogpost_teaser.jpg` (string, required) - file name
+ type: `image/jpg` (string, required) - file mime type
+ size: `135897` (number, required) - size of file in bytes (unsigned integer)
+ last_modified: `2016-03-31T08:04:14.7525987Z` (string, required) - time of asset upload in ISO 8601 format

## AssetItemElement (object)
+ `element_id`: `a3a31bea-fbbf-4534-8002-a1907955f537` (string, required)
+ type: asset (string, required)
+ name: Teaser image (string, required)
+ value (array[Asset], required) - list of assets

## DateTimeItemElement (object)
+ `element_id`: `3697b5c0-4139-4304-b09d-fff5bc3ccdd4` (string, required)
+ name: Publication date (string, required)
+ type: date_time (string, required)
+ value: `2016-03-19T00:00:00Z` (string, optional) - ISO 8601 date time

## NumberItemElement (object)
+ `element_id`: `644d2ddc-2af5-4665-8c04-6ceb2ad1313b` (string, required)
+ type: number (string, required)
+ name: `Price in USD` (string, required)
+ value: 49.9 (number, optional)

## TextItemElement (object)
+ `element_id`: `f97149c2-ac83-49c1-b23d-9ba597460a10` (string, required)
+ name: Title (string, required)
+ type: text (string, required)
+ value: Sample blog post (string, optional)

## RichTextItemElement (object)
+ `element_id`: `af4ca3fb-870a-48b0-88bf-10175a6efc3e` (string, required)
+ name: Body (string, required)
+ type: `rich_text` (string, required)
+ value: `<p>There are many different types of blogs, differing not only in the type of content, but also in the way that content is delivered or written.&nbsp;</p>\n<h2>Personal blogs</h2>` (string, optional)

## Content Item Reference (object)
+ `item_id`: `02845986-6c4f-4eb6-a820-e8f4493feacd` (string, required)
+ `type_id`: `2e9b7cdd-e623-4918-a3f0-eb237878723c` (string, required) 
+ name: Blog post (string, required)
+ link: `https://api-draft.kenticocloud.com/projects/54da688e-5489-467d-bd25-28882f4f054d/items/02845986-6c4f-4eb6-a820-e8f4493feacd` (string, required)

## ModularContentItemElement (object)
+ `element_id`: `c7599588-edbd-4ae0-a5dc-91c3240916ef` (string, required)
+ name: Features (string, required)
+ type: `modular_content` (string, required)
+ value (array[Content Item Reference], required)

############################################
## Sitemap (object)
+ nodes (array[Sitemap Node], required)

## Sitemap Node (object)
+ `sitemap_node_id`: `0d5adc73-ba63-45e6-8fc4-e2d751cf1ca0` (string, required)
+ name: Home (string, required)
+ children (array[Sitemap Node], required)

## Error (object)
+ `error_id`: 0HKTT1H7HR1CO (string) - unique id of error, useful for support team to debug and track problems
+ `code`: CR400.1 (string)
+ `message`: Bad Request (string)
+ `description`: `Missing request body or format of body is malformed (string)