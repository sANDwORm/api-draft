FORMAT: 1A
HOST: https://api-draft.kenticocloud.com/

# Kentico Draft API Reference
## Getting started with Kentico Draft API
Welcome to the Kentico Draft API reference! The Kentico Draft API is based on REST. This documentation lists and describes the individual resources you can use to manipulate objects in Kentico Draft.

Often individual resources are used together in complex use cases. Following use cases will help you get started:
*   [Getting content items](#introduction/getting-content-items)
*   [Downloading assets](#introduction/downloading-assets)
*   [Getting modular content items](#introduction/getting-modular-content-items)

### Typical Server Responses
*   <code>200</code> OK - The request was successful
*   <code>201</code> Created - The request was successful and a resource was created
*   <code>204</code> No Content - The request was successful but there is no representation to return (that is, the response is empty)
*   <code>400</code> Bad Request - The request could not be understood or was missing required parameters
*   <code>401</code> Unauthorized - Authentication failed or user does not have permissions for the requested operation
*   <code>403</code> Forbidden - Access denied
*   <code>404</code> Not Found - Resource was not found
*   <code>405</code> Method Not Allowed - Requested method is not supported for the specified resource

### Feedback and Help
If you have ideas about how we can improve Draft API or this documentation (or want to share with us any comments), email us at draft@kentico.com.

We're always glad to answer all your questions or share qith you our future plans. Drop us a line at draft@kentico.com.

## Getting content items
After content in Kentico Draft is approved and ready for import into a CMS, you can use Draft API to get the finished content items. Now, we’ll show you in 6 simple steps how you can get all content items of a content inventory section.

### 1. Configure authorization
To keep your inventory private, we will need to recognize your requests using an API Key. Drop us a line at draft@kentico.com and we’ll send you back your API key. To understand better, how you intend to use our API, please briefly describe the following:

* Where will the API be used? (CMS custom module, Standalone application, One-off script, other)
* What programming language will be used to call our API?
* What CMS are you using for displaying the content?

Once you have your API Key, you can authorize your requests by including the Key in the Authorization header:

<pre>Authorization:Bearer {access_token}</pre>


### 2. Get a project
The content inventory and content models are a part of a project. All resources are a part of a project. You need to include the project ID in URL for every REST call on items, types, workflow, sitemap or assets.

To get a project ID, [get the list of all projects](#reference/0/projects/get-all-projects). Then, pick your project and save the project ID.

### 3. Get a content type
The content inventory contains items of various content types. You can use Draft API to get only items of a specific content type. Now, we’ll show you how you can get a content type. You’ll need the ID of this type later on when getting content items.

To get a content type, [get a list of all content types](#reference/0/content-types/get-all-content-types). Then, pick a type and save it for later.

### 4. Get a sitemap location
The sitemap in Draft helps you to organize content items into a logical structure which gives you a hint how the new website will look. You can use Draft API to get only items assigned to a specific sitemap location. Now, we’ll show you how you can get your sitemap. You’ll need the ID of a sitemap location later on when getting content items.

To get a sitemap location, [get the whole sitemap](#reference/0/sitemap/get-sitemap). Then, pick a location and save it for later. You can pick multiple locations to get items assigned to one of them.

### 5. Get a workflow step
The content inventory contains items in various steps of content production workflow. You can use Draft API to get only items with a specific workflow step. For example, to get only items which are ready for import to a CMS. Now, we’ll show you how you can get a workflow step. You’ll need the ID of this step later on when getting content items.

To get a workflow step, [get a list of all steps](#reference/0/workflow/get-workflow). Then, pick a step and save it for later.

### 6. Get the content items
Now, we’ll show you how you can get a list of content items from your content inventory. You can refine items by a content type, workflow step or a sitemap location. To achieve this, include a type ID, step ID or location ID in the query string of your request when [getting content items](#reference/0/content-items/get-content-items) using Draft API.

Note, that when you are getting more than 10 items at once, Draft API will slice the whole list of items into pages. Initially, it will return you the first page with a link to the next page. You can use this link to get the next bunch of items until you reach the last page. To get the items, check the items object of the [response JSON](#reference/0/all-content-items/get-content-items). To get the next page, check the “pagination.next” string attribute of the [response JSON](#reference/0/content-items/get-content-items).

## Downloading assets
When exporting content items from Draft, you might need to download all assets for these items. Draft API allows you to generate a temporary download link, which expires after 60 minutes. 

After [getting content items](#reference/0/all-content-items/get-content-items), find asset content elements of all items from which you want to download assets. You can recognize asset content element, by having a type attribute “asset”. The value of asset content elements is an array of asset metadata. Pick IDs of assets, which we’ll use later.

When you have the assets ID, you can use Draft API to [get a temporary download link](#reference/0/assets/get-asset-download-link).

## Getting modular content items
Content items in Draft may be composed of smaller content blocks called modular content items. You can use Draft API to export modular content items as well. 

After [getting content items](#reference/0/all-content-items/get-content-items), find content elements which hold the modular content items. You can recognize modular content elements, by having a type attribute “modular_content”. Pick modular items IDs, which we’ll use later.

When you have the modular content item ID, you can use Draft API to [get that specific content item](#reference/0/one-content-item/get-content-item).

## Projects [/projects]
Project is where all your content is stored. Both content inventory and content models are always a part of a project.

### Get All Projects [GET]
+ Request
    + Headers
    
            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (array[Project])

## Content Types [/projects/{project_id}/types]
Content types define the structure of your content items.
+ Parameters

    + project_id: `54da688e-5489-467d-bd25-28882f4f054d` (string, required)
    
### Get all Content Types [GET]
+ Request
    + Headers
    
            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (array[Content Type])
    
## All Content Items [/projects/{project_id}/items{?sitemap_location,workflow_status,content_type}]
Content items contain content for your website.
+ Parameters

    + project_id: `21111b5e-6cc9-46b2-a27b-c28c5f4a0b4f` (string, required)
    + sitemap_location: `31675d56-513b-438b-a9ac-9b7ebcf91efa` (string, optional) - Include sitemap location ID to get only items assigned to this location. You can use this parameter multiple times to get items from more locations at once.
    + workflow_status: `2e9b7cdd-e623-4918-a3f0-eb237878723c` (string, optional) - Include workflow status ID to get only items with this status. For example, only approved items.
    + content_type: `2e9b7cdd-e623-4918-a3f0-eb237878723c` (string, optional) - Include content type ID to get only items of this type.

### Get Content Items [GET]
+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes 
        + items (array[Content Item])
        + pagination - simple forward only paging
            + items_count: 128
            + pages_count: 13
            + current_page: 1
            + next: `https://api-draft.kenticocloud.com/projects/54da688e-5489-467d-bd25-28882f4f054d/items?page=2`
    
## One Content Item [/projects/{project_id}/items/{item_id}]
A single content item contains content for one web page or a smaller content block.
+ Parameters

    + project_id: `21111b5e-6cc9-46b2-a27b-c28c5f4a0b4f` (string, required)
    + item_id: `f22608f6-f037-4dda-8869-9924023fec7b` (string, required)

### Get Content Item [GET]
+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (Content Item)

## Workflow [/projects/{project_id}/workflow]
Workflow steps help you to distinguish what items are approved for import.
+ Parameters

    + project_id: `54da688e-5489-467d-bd25-28882f4f054d` (string, required)

### Get Workflow [GET]
+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (array[Workflow Status])
    
    + Body
    
            [
              {
                "_id": "2311ca28-b696-4fc7-ac27-340cc9c4e53d",
                "name": "Draft",
                "color": "red"
              },
              {
                "_id": "7ff9f463-008a-4bed-b979-fa7868f34585",
                "name": "Review",
                "color": "yellow"
              },
              {
                "_id": "a871b156-7eb6-45d8-805a-c3bfa2f53a22",
                "name": "SEO verification",
                "color": "lime"
              },
              {
                "_id": "dd472b79-fb4e-4e2d-9270-449bc69c6cd4",
                "name": "Ready for approval",
                "color": "teal"
              },
              {
                "_id": "65e025db-1a04-4b9d-b366-408e09b58cb7",
                "name": "Approved",
                "color": "blue"
              }
            ]
            
    
## Sitemap [/projects/{project_id}/sitemap]
Sitemap location helps you to get only content items which you're currently importing.
+ Parameters

    + project_id: `54da688e-5489-467d-bd25-28882f4f054d` (string, required)

### Get Sitemap [GET]
+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes (Sitemap)
    
    + Body
        
            {
              "_id": "0d5adc73-ba63-45e6-8fc4-e2d751cf1ca0",
              "name": "sitemap",
              "children": [
                {
                  "_id": "9ee4e597-40c3-266d-5965-8d3e437b8eed",
                  "name": "Home",
                  "children": []
                },
                {
                  "_id": "6fc2bcbc-8500-e855-ad66-575ac0f9c35e",
                  "name": "Events",
                  "children": [
                    {
                      "_id": "82ec09fb-8851-551e-0221-017fe29c1bdb",
                      "name": "USA",
                      "children": []
                    },
                    {
                      "_id": "326e8b6b-2df2-a223-b23c-ff116eba3c1b",
                      "name": "Europe",
                      "children": []
                    }
                  ]
                },
                {
                  "_id": "6200a4bf-a89b-9c53-2707-dd12ab3ffd87",
                  "name": "Blog",
                  "children": []
                }
              ]
            }
            
## Assets [/projects/{project_id}/asset/{asset_id}]
Kentico Draft API allows you to generate a download link for your assets. Download link expires after 60 minutes.
+ Parameters

    + project_id: `54da688e-5489-467d-bd25-28882f4f054d` (string, required)
    + asset_id: `287b779d-9ceb-4c8f-96c4-ea4fdb22b09d` (string, required) 

### Get Asset Download Link [GET]
+ Request
    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)
    + Attributes
        + link: `https://horusdevelopment.blob.core.windows.net/54da688e-5489-467d-bd25-28882f4f054d/287b779d-9ceb-4c8f-96c4-ea4fdb22b09d/blogpost_teaser.jpg?sv=2015-02-21&sig=FVArbWI7zCodmEMJ69DE4JCiyfhqj` (string, required) - Temporary asset download link.
        + exp: `2016-06-11T12:55:28.29493Z` (string, required) - Asset download link expiration date and time in ISO 8601 format.

##########################################################

# Data Structures

## Project (object)
+ `project_id` : `21111b5e-6cc9-46b2-a27b-c28c5f4a0b4f` (string)
+ name: Sample Project (string)

## Content Type (object)
+ `type_id`: `2e9b7cdd-e623-4918-a3f0-eb237878723c` (string, required)
+ name: Blog (string, required) - Max 50 characters
+ elements (array)
    - (TextTypeElement)
    - (RichTextTypeElement)
    - (NumberTypeElement)
    - (DateTimeTypeElement)
    - (AssetTypeElement)
    - (ModularContentTypeElement)

## TypeElementBase (object)
+ `type_element_id` (string, required)
+ name (string, required)
+ type (enum, required)
    - string
    - number
    - rich_text
    - assets
    - modular_content
    - date_time

## AssetTypeElement (TypeElementBase)
+ `type_element_id`: `a3a31bea-fbbf-4534-8002-a1907955f537`
+ name: Teaser image
+ type: assets

## DateTimeTypeElement (TypeElementBase)
+ `type_element_id`: `3697b5c0-4139-4304-b09d-fff5bc3ccdd4`
+ name: Publication date
+ type: date_time

## NumberTypeElement (TypeElementBase)
+ `type_element_id`: `644d2ddc-2af5-4665-8c04-6ceb2ad1313b`
+ name: Price in USD
+ type: number

## TextTypeElement (TypeElementBase)Add+ `type_element_id`: `f97149c2-ac83-49c1-b23d-9ba597460a10`
+ name: Title
+ type: text

## RichTextTypeElement (TypeElementBase)
+ `type_element_id`: `af4ca3fb-870a-48b0-88bf-10175a6efc3e`
+ name: Body
+ type: rich_text

## ModularContentTypeElement (TypeElementBase)
+ `type_element_id`: `c7599588-edbd-4ae0-a5dc-91c3240916ef`
+ name: Features
+ type: modular_content

############################################

## Content Item (object)
+ `item_id`: `f22608f6-f037-4dda-8869-9924023fec7b` (string, required)
+ `type_id` : `2e9b7cdd-e623-4918-a3f0-eb237878723c` (string, required) 
+ `workflow_status_id`: `bb6aeed9-d162-46f2-a985-210b1f0127b7rewoe` (string, required)
+ name: `Blog post (string, required)` - Max 50 characters
+ sitemam_location (array[string])
    - `21111b5e-6cc9-46b2-a27b-c28c5f4a0b4f`
    - `2e9b7cdd-e623-4918-a3f0-eb237878723c`
+ last_modified: `2016-06-09T14:41:10.6814919Z` (string, required)
+ elements (array)
    - (TextItemElement)
    - (RichTextItemElement)
    - (NumberItemElement)
    - (DateTimeItemElement)
    - (AssetItemElement)
    - (ModularContentItemElement)

## Workflow Status (object)
+ workflow_id: `bb6aeed9-d162-46f2-a985-210b1f0127b7` (string, required)
+ name: Draft (string, required)
+ color: red (enum, required)
    - red
    - pink
    - purple
    - `deep-purple`
    - indigo
    - blue
    - cyan
    - teal
    - green
    - `light-green`
    - lime
    - yellow
    - amber
    - orange
    - brown
    - grey
    - `light-grey`

## ItemElementBase (object)
+ `item_id` (string, required)
+ name (string, required)
+ type (enum, required)
    - string
    - number
    - rich_text
    - assets
    - modular_content
    - date_time
    
## Asset (object)
+ asset_id: `2e9b7cdd-e623-4918-a3f0-eb237878723c` (string, required)
+ name: `blogpost_teaser.jpg` (string, required) - file name
+ type: `image/jpg` (string, required) - file mime type
+ size: `135897` (number, required) - size of file (unsigned integer)
+ last_modified: `2016-03-31T08:04:14.7525987Z` (string, required) - time of asset upload

## AssetItemElement (object)
+ `item_id`: `a3a31bea-fbbf-4534-8002-a1907955f537` (string, required)
+ type: asset (string, required)
+ name: Teaser image (string, required)
+ value (array[Asset], required) - list of assets

## DateTimeItemElement (object)
+ `item_id`: `323344d1-0c9b-473f-b4ed-64c6d8517ac6` (string, required)
+ name: Publication date (string, required)
+ type: date_time (string, optional) - ISO 8601 date time
+ value: `2016-03-19T00:00:00Z` (string, required)

## NumberItemElement (object)
+ `item_id`: `97b08987-e080-431e-bb8d-b3da93ea63f9` (string, required)
+ type: number (string, required)
+ name: `Price in USD` (string, required)
+ value: 49.9 (number, optional)

## TextItemElement (object)
+ `item_id`: `3da49f85-ae9d-4974-9f8b-f2935f9027bf` (string, required)
+ name: Title (string, required)
+ type: text (string, required)
+ value: Sample blog post (string, optional)

## RichTextItemElement (object)
+ `item_id`: `763bf239-075c-41e8-b5b2-704cc7e9fc0c` (string, required)
+ name: Body (string, required)
+ type: `rich_text` (string, required)
+ value: `<p>There are many different types of blogs, differing not only in the type of content, but also in the way that content is delivered or written.&nbsp;</p>\n<h2>Personal blogs</h2>` (string, optional)

## Content Item Reference (object)
+ `item_id`: `02845986-6c4f-4eb6-a820-e8f4493feacd` (string, required)
+ name: Blog post (string, required)
+ link: `https://api-draft.kenticocloud.com/projects/54da688e-5489-467d-bd25-28882f4f054d/items/02845986-6c4f-4eb6-a820-e8f4493feacd` (string, required)

## ModularContentItemElement (object)
+ `item_id`: `31675d56-513b-438b-a9ac-9b7ebcf91efa` (string, required)
+ name: Features (string, required)
+ type: `modular_content` (string, required)
+ value (array[Content Item Reference], required)

############################################

## Sitemap Node (object)
+ `sitemap_node_id`: `31675d56-513b-438b-a9ac-9b7ebcf91efa` (string, required)
+ name: Home (string, required)
+ children (array[Sitemap Node], required)

## Sitemap (object)
+ nodes (array[Sitemap Node])